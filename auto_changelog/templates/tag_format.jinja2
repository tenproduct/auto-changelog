{% macro print_group(tag, group, title) %}
{% if group in tag.groups %}
### {{ title }}
{% for commit in tag.groups[group] %}
{% if group == 'break' %}
#### {{ "[" + ','.join(commit.ticket_refs) + "] " if commit.ticket_refs }}{{ "[" + ','.join(commit.extra_categories) + "] " if commit.extra_categories }}{{ "(" + commit.specific + ") " if commit.specific }}{{ commit.description.strip() }}
{{ commit.body }}

{% elif commit.description %}
- {{ "[" + ','.join(commit.ticket_refs) + "] " if commit.ticket_refs }}{{ "[" + ','.join(commit.extra_categories) + "] " if commit.extra_categories }}{{ "(" + commit.specific + ") " if commit.specific }}{{ commit.description.strip() }}
{% endif %}
{% endfor %}

{% endif %}
{% endmacro %}


{% macro commit_list_format(tag) %}
{{ print_group(tag, 'revert', 'Change reversions') }}{{ print_group(tag, 'break', 'Breaking Changes') }}{{ print_group(tag, 'fix', 'Bug Fixes') }}{{ print_group(tag, 'feat', 'New Features') }}{{ print_group(tag, 'unformatted', 'Unformatted') }}{{ print_group(tag, 'perf', 'Performance Enhancements') }}{{ print_group(tag, 'refactor', 'Refactoring') }}{{ print_group(tag, 'docs', 'Documentation Changes') }}{{ print_group(tag, 'chore', 'Administration and Chores') }}
{% endmacro %}
